name: Validate Files and Commit Messages

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
        default: ''
      runner:
        type: string
        default: '["base", "dind", "2204"]'
      runner-archs:
        type: string
        default: '["amd64"]'
      runner-arch-map:
        type: string
        default: '[{"amd64":"x86_64", "arm64":"aarch64", "arm":"armv7l"}]'
    secrets:
      GIT_CLONE_PAT:
        required: false

jobs:
  linter-commitlint:
    name: Lint Commit Messages
    runs-on: ${{ format('{0}-{1}', join(fromJSON(inputs.runner), '-'), matrix.arch) }}
    strategy:
      matrix:
        arch: ["${{ fromJSON(inputs.runner-archs) }}"]
      fail-fast: false
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run commitlint
        uses: wagoid/commitlint-github-action@v6
        with:
          configFile: .github/linters/commitlint.config.mjs

  linter-typos:
    name: Spell Check Repo
    runs-on: ${{ format('{0}-{1}', join(fromJSON(inputs.runner), '-'), matrix.arch) }}
    strategy:
      matrix:
        arch: ["${{ fromJSON(inputs.runner-archs) }}"]
      fail-fast: false
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Spell check
        uses: crate-ci/typos@master
        with:
          config: .github/linters/typos.toml

  linter-license-eye:
    name: Check License Headers
    runs-on: ${{ format('{0}-{1}', join(fromJSON(inputs.runner), '-'), matrix.arch) }}
    strategy:
      matrix:
        arch: ["${{ fromJSON(inputs.runner-archs) }}"]
      fail-fast: false
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Fix paths
        run: |
          echo "Unset GO PATH, as the following action conflicts with the already installed version"
          export GOPATH=
          echo "GOPATH=${GOPATH}" >> "$GITHUB_ENV"
          export GOTOOLDIR=
          echo "GOTOOLDIR=${GOTOOLDIR}" >> "$GITHUB_ENV"
          export GOROOT=
          echo "GOROOT=${GOROOT}" >> "$GITHUB_ENV"
        shell: bash

      - name: Run license-eye
        uses: apache/skywalking-eyes/header@main
        with:
          config: .github/linters/licenserc.yml
          token: ${{ secrets.GITHUB_TOKEN }}
