name: Build

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
        default: ''
      runner:
        type: string
        default: '["base", "dind", "2204"]'
      runner-archs:
        type: string
        default: '["amd64", "arm64"]'
      runner-arch-map:
        type: string
        default: '[{"amd64":"x86_64", "arm64":"aarch64", "arm":"armv7l"}]'
    secrets:
      GIT_CLONE_PAT:
        required: false

        #pull_request:
        #branches: [ "main" ]
        #types:
        #- synchronize
        #- labeled

  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ format('{0}-{1}', join(fromJSON(inputs.runner), '-'), matrix.archconfig) }}
    strategy:
      matrix:
        archconfig: ["${{ fromJSON(inputs.runner-archs) }}"]
      fail-fast: false
    
    steps:

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Display Go version
      run: |
        go version

    - name: Set ref and repo from PR or dispatch
      id: set-ref
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" || "${{ github.event_name }}" == "pull_request_target" ]]; then
          echo "ref=${{ github.event.pull_request.head.ref }}" >> "$GITHUB_OUTPUT"
          echo "repo=${{ github.event.pull_request.head.repo.full_name }}" >> "$GITHUB_OUTPUT"
        else
          echo "ref=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
          echo "repo=${{ github.repository }}" >> "$GITHUB_OUTPUT"
        fi

    - name: Build urunc binaries
      id: build-urunc-binaries
      run: |
        make

    - name: Upload urunc_arm64 to S3
      if: matrix.archconfig == 'arm64'
      uses: cloudkernels/minio-upload@v3
      with:
        url: https://s3.nbfc.io
        access-key: ${{ secrets.AWS_ACCESS_KEY }}
        secret-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        local-path: dist/urunc_static_arm64
        remote-path: nbfc-assets/github/urunc/dist/${{ steps.set-ref.outputs.ref }}/${{ matrix.archconfig }}/
        policy: 1

    - name: Upload urunc_amd64 to S3
      if: matrix.archconfig == 'amd64'
      uses: cloudkernels/minio-upload@v3
      with:
        url: https://s3.nbfc.io
        access-key: ${{ secrets.AWS_ACCESS_KEY }}
        secret-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        local-path: dist/urunc_static_amd64
        remote-path: nbfc-assets/github/urunc/dist/${{ steps.set-ref.outputs.ref }}/${{ matrix.archconfig }}/
        policy: 1

    - name: Upload containerd-shim-urunc-v2_arm64 to S3
      if: matrix.archconfig == 'arm64'
      uses: cloudkernels/minio-upload@v3
      with:
        url: https://s3.nbfc.io
        access-key: ${{ secrets.AWS_ACCESS_KEY }}
        secret-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        local-path: dist/containerd-shim-urunc-v2_static_arm64
        remote-path: nbfc-assets/github/urunc/dist/${{ steps.set-ref.outputs.ref }}/${{ matrix.archconfig }}/
        policy: 1

    - name: Upload containerd-shim-urunc-v2_amd64 to S3
      if: matrix.archconfig == 'amd64'
      uses: cloudkernels/minio-upload@v3
      with:
        url: https://s3.nbfc.io
        access-key: ${{ secrets.AWS_ACCESS_KEY }}
        secret-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        local-path: dist/containerd-shim-urunc-v2_static_amd64
        remote-path: nbfc-assets/github/urunc/dist/${{ steps.set-ref.outputs.ref }}/${{ matrix.archconfig }}/
        policy: 1
